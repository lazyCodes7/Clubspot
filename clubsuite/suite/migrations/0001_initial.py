# Generated by Django 3.2.7 on 2021-09-19 05:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=20)),
                ('first_name', models.CharField(default='FirstName', max_length=20)),
                ('last_name', models.CharField(default='LastName', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_name', models.CharField(max_length=50, unique=True)),
                ('club_type', models.CharField(choices=[('PUB', 'Public'), ('PRI', 'Private')], default='PUB', max_length=3)),
                ('image', stdimage.models.StdImageField(default='static/media/default.jpg', upload_to='')),
                ('first_seen', models.DateTimeField(blank=True, editable=False, null=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('club_description', models.TextField()),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_remove_member', 'Can remove member'), ('can_handle_join_requests', 'Can handle join requests'), ('can_handle_promotion_requests', 'Can handle promotion requests'), ('can_view_stats', 'Can view individual member stats'), ('can_create_event', 'Can create an event for this club'), ('can_add_receipt', 'Can add a receipt'), ('can_remove_receipt', 'Can remove a receipt'), ('can_access_attendance', 'Can access member attendance'), ('can_access_budget', 'Can access the budgets for this club'), ('can_create_budget', 'Can create a budget'), ('can_request_reimbursement', 'Can request for a reimbursement'), ('can_handle_reimbursement', 'Can handle reimbursement'), ('can_view_account_info', 'Can view member personal information')),
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('name', models.CharField(default='unknown', max_length=50)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='suite.club')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('start_time', models.TimeField(default='12:00:00')),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('end_time', models.TimeField(default='12:00:00')),
                ('event_location', models.CharField(max_length=100)),
                ('event_description', models.TextField()),
                ('event_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('event_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('accessibility', models.BooleanField(default=True)),
                ('required', models.BooleanField(default=False)),
                ('image', stdimage.models.StdImageField(default='static/media/special_event.png', upload_to='')),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suite.club')),
                ('did', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='suite.division')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='suite.user')),
                ('preferred_name', models.CharField(blank=True, max_length=20)),
                ('student_title', models.CharField(choices=[('U', 'Undergraduate'), ('G', 'Graduate'), ('O', 'Others')], default='O', max_length=1)),
                ('graduation_year', models.IntegerField(default=0)),
                ('major', models.CharField(blank=True, max_length=20)),
                ('college', models.CharField(blank=True, max_length=50)),
                ('GPA', models.DecimalField(decimal_places=3, default=0.0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('who_purchase', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('R', 'Requested'), ('A', 'Accepted'), ('D', 'Denied')], default='P', max_length=1)),
                ('notes', models.CharField(blank=True, max_length=1000)),
                ('did', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suite.division')),
            ],
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suite.club')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventSignIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suite.club')),
                ('eid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suite.event')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='club',
            name='requests',
            field=models.ManyToManyField(related_name='JoinRequest', through='suite.JoinRequest', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('did', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='suite.receipt')),
            ],
        ),
    ]
